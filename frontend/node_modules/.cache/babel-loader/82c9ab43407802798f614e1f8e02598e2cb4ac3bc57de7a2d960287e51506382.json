{"ast":null,"code":"var _jsxFileName = \"/Users/myrandathompson/Desktop/Capstone/project3/stacked/frontend/src/pages/AskPage.js\",\n  _s = $RefreshSig$();\nimport styled from 'styled-components';\nimport Input from './input';\nimport AskBlueButton from './AskBlueButton';\nimport React from 'react';\nimport Markdown from 'https://esm.sh/react-markdown@10';\nimport gfm from 'remark-gfm';\nimport { useState } from 'react';\nimport { initialState } from 'react';\nimport axios from 'axios';\nimport BlueButton from './BlueButton';\nimport { Navigate } from 'react-router-dom';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\npadding: 30px 20px;\n`;\n_c = Container;\nconst PreviewQuestion = styled.div`\npadding: 20px;\nbackground-color: grey;\nborder-radius: 5px;\nmargin-bottom: 20px;\n`;\nconst QuestionBodyInput = styled.textarea`\nbackground: none;\nborder: 1px solid grey;\nborder-radius: 3px;\ndisplay: block;\nwidth: 100%;\nbox-sizing: border-box;\npadding: 10px;\nmin-height: 300px;\nmargin-bottom: 20px; \ncolor: black;  \n`;\n_c2 = QuestionBodyInput;\nfunction AskPage() {\n  _s();\n  const [questionTitle, setQuestionTitle] = useState(initialState, '');\n  const [questionBody, setQuestionBody] = useState(initialState, '');\n  const [redirect, setRedirect] = useState('');\n  function askQuestion(Event) {\n    Event.preventDefault();\n    axios.post('https://localhost:3001/questions', {\n      title: questionTitle,\n      content: questionBody\n    }, {\n      withCreditals: true\n    }).then(response => {\n      console.log(response.data);\n      setRedirect('/questions' + response.data);\n    });\n  }\n\n  // function question() {\n  //     Event.preventDefault();\n  //     axios.post('http://localhost:3001/questions', {\n  //         title: questionTitle,\n  //         content: questionBody,\n  //     }, {withCredentials: true})\n  //     .then(response => console.log(response));\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [redirect && /*#__PURE__*/_jsxDEV(\"redirect\", {\n      to: redirect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      style: {\n        marginBottom: '20px'\n      },\n      children: \"Ask A Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: Event => sendQuestion(Event),\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        value: questionTitle,\n        onChange: e => setQuestionTitle(e.target.value),\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(QuestionBodyInput, {\n        onChange: e => setQuestionBody(e.target.value),\n        placeholder: \"More information about your question.\",\n        value: questionBody\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PreviewArea, {\n        children: /*#__PURE__*/_jsxDEV(Markdown, {\n          plugins: [gfm],\n          children: questionBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(BlueButton, {\n        type: 'submit',\n        children: \"Submit Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this)\n  // <main>\n  //     <h1>Ask a Question</h1>\n  // <Input type=\"text\" \n  //     value={questionTitle} \n  //     onChange={e => setQuestionTitle(e.target.value)}\n  //     placeholder=\"Title of your question\" />\n  //     <QuestionBodyInput \n  //         onChange={e => setQuestionBody(e.target.value)}\n  //         placeholder=\"Question?\">{questionBody}</QuestionBodyInput>\n  //     <PreviewQuestion>\n  //         <Markdown>\n  //             plugins={{gfn}} children={questionBody}\n  //          </Markdown>\n  //     </PreviewQuestion>\n  //     <AskBlueButton style={{marginTop:'20px'}}>Submit</AskBlueButton>\n\n  // </main>\n  ;\n}\n_s(AskPage, \"ROKOIpMkiFMGc5+ByvOeEHuiX1U=\");\n_c3 = AskPage;\nexport default AskPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"QuestionBodyInput\");\n$RefreshReg$(_c3, \"AskPage\");","map":{"version":3,"names":["styled","Input","AskBlueButton","React","Markdown","gfm","useState","initialState","axios","BlueButton","Navigate","Header","jsxDEV","_jsxDEV","Container","div","_c","PreviewQuestion","QuestionBodyInput","textarea","_c2","AskPage","_s","questionTitle","setQuestionTitle","questionBody","setQuestionBody","redirect","setRedirect","askQuestion","Event","preventDefault","post","title","content","withCreditals","then","response","console","log","data","children","to","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","onSubmit","sendQuestion","type","value","onChange","e","target","placeholder","PreviewArea","plugins","_c3","$RefreshReg$"],"sources":["/Users/myrandathompson/Desktop/Capstone/project3/stacked/frontend/src/pages/AskPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport Input from './input';\nimport AskBlueButton from './AskBlueButton';\nimport React from 'react';\nimport Markdown from 'https://esm.sh/react-markdown@10'\nimport gfm from 'remark-gfm';\nimport { useState } from 'react';\nimport { initialState } from 'react';\nimport axios from 'axios';\nimport BlueButton from './BlueButton';\nimport { Navigate } from 'react-router-dom';\nimport Header from './Header';\n\n\nconst Container = styled.div`\npadding: 30px 20px;\n`;\n\n\nconst PreviewQuestion = styled.div`\npadding: 20px;\nbackground-color: grey;\nborder-radius: 5px;\nmargin-bottom: 20px;\n`;\n\n\n\n\n\nconst QuestionBodyInput = styled.textarea`\nbackground: none;\nborder: 1px solid grey;\nborder-radius: 3px;\ndisplay: block;\nwidth: 100%;\nbox-sizing: border-box;\npadding: 10px;\nmin-height: 300px;\nmargin-bottom: 20px; \ncolor: black;  \n`;\n\n\n\n\n\n\nfunction AskPage() {\n\n    const [questionTitle, setQuestionTitle] = useState(initialState, '');\n    const [questionBody, setQuestionBody] = useState(initialState, '');\n    const [redirect, setRedirect] = useState('');\n    \n\n\n    function askQuestion(Event) {\n        Event.preventDefault();\n        axios.post('https://localhost:3001/questions', {\n            title: questionTitle,\n            content: questionBody,\n        }, {withCreditals:true})\n        .then(response => {\n            console.log(response.data);\n            setRedirect('/questions'+response.data);\n\n        });\n    }\n    \n    \n\n    // function question() {\n    //     Event.preventDefault();\n    //     axios.post('http://localhost:3001/questions', {\n    //         title: questionTitle,\n    //         content: questionBody,\n    //     }, {withCredentials: true})\n    //     .then(response => console.log(response));\n    // }\n\n   \n    return (\n        <Container>\n            {redirect && (\n                <redirect to={redirect} />\n            )}\n            <Header style={{marginBottom: '20px'}}>Ask A Question</Header>\n            <form onSubmit={Event => sendQuestion(Event)}>\n                <Input type=\"text\"\n                value={questionTitle}\n                onChange={e => setQuestionTitle(e.target.value)}\n                placeholder=\"Title\" />\n                \n            <QuestionBodyInput\n            onChange={e => setQuestionBody(e.target.value)}\n            placeholder=\"More information about your question.\" value={questionBody} />\n            <PreviewArea>\n                <Markdown plugins={[gfm]} children={questionBody} />\n            </PreviewArea>\n            \n            <BlueButton type={'submit'}>Submit Question</BlueButton>\n            </form>\n        </Container>\n        // <main>\n        //     <h1>Ask a Question</h1>\n        // <Input type=\"text\" \n        //     value={questionTitle} \n        //     onChange={e => setQuestionTitle(e.target.value)}\n        //     placeholder=\"Title of your question\" />\n        //     <QuestionBodyInput \n        //         onChange={e => setQuestionBody(e.target.value)}\n        //         placeholder=\"Question?\">{questionBody}</QuestionBodyInput>\n        //     <PreviewQuestion>\n        //         <Markdown>\n        //             plugins={{gfn}} children={questionBody}\n        //          </Markdown>\n        //     </PreviewQuestion>\n        //     <AskBlueButton style={{marginTop:'20px'}}>Submit</AskBlueButton>\n        \n        \n        // </main>\n        \n            \n            \n       \n    );\n}\n    \n\nexport default AskPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}