{"ast":null,"code":"var _jsxFileName = \"/Users/myrandathompson/Desktop/Capstone/project3/stacked/frontend/src/pages/QuestionsPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './QuestionsPage.css';\nimport styled from 'styled-components';\nimport QuestionRow from './QuestionRow';\nimport Header from './Header';\nimport GlobalHeader from './GlobalHeader';\nimport BlueButton from './BlueButton';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderRow = styled.div`\ndisplay: grid;\ngrid-template-columns: 1fr min-content;\npadding: 30px 20px;\n`;\n_c = HeaderRow;\nfunction QuestionsPage() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  function fetchQuestions() {\n    axios.get('http://localhost:3001/questions', {\n      withCredentials: true\n    }).then(response => setQuestions(response.data));\n  }\n  useEffect(() => fetchQuestions(), []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HeaderRow, {\n      children: [/*#__PURE__*/_jsxDEV(GlobalHeader, {\n        children: \"QUESTIONS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(BlueButton, {\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/ask\",\n          children: \"Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this), questions && questions.length > 0 && questions.map(question => /*#__PURE__*/_jsxDEV(QuestionRow, {\n      title: question.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(QuestionsPage, \"CKB/k5G3mV4KobsSNqrjgt9uJws=\");\n_c2 = QuestionsPage;\nexport default QuestionsPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"HeaderRow\");\n$RefreshReg$(_c2, \"QuestionsPage\");","map":{"version":3,"names":["useState","useEffect","styled","QuestionRow","Header","GlobalHeader","BlueButton","PropTypes","NavLink","jsxDEV","_jsxDEV","HeaderRow","div","_c","QuestionsPage","_s","questions","setQuestions","fetchQuestions","axios","get","withCredentials","then","response","data","children","fileName","_jsxFileName","lineNumber","columnNumber","to","length","map","question","title","_c2","$RefreshReg$"],"sources":["/Users/myrandathompson/Desktop/Capstone/project3/stacked/frontend/src/pages/QuestionsPage.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport './QuestionsPage.css'\nimport styled from 'styled-components';\nimport QuestionRow from './QuestionRow';\nimport Header from './Header';\nimport GlobalHeader from './GlobalHeader';\nimport BlueButton from './BlueButton';\nimport PropTypes from 'prop-types';\n\nimport { NavLink } from 'react-router-dom';\n\nconst HeaderRow = styled.div`\ndisplay: grid;\ngrid-template-columns: 1fr min-content;\npadding: 30px 20px;\n`;\n\n\n\n\n\n\nfunction QuestionsPage() {\n    const [questions,setQuestions] = useState([]);\n    function fetchQuestions() {\n        axios.get('http://localhost:3001/questions', {withCredentials:true})\n        .then(response => setQuestions(response.data));\n    }\n    useEffect(() => fetchQuestions(), []);\n    return (\n        <main>\n            <Header />\n           <HeaderRow>\n            <GlobalHeader>QUESTIONS</GlobalHeader>\n            <BlueButton>\n                <NavLink to=\"/ask\">Questions</NavLink>\n                </BlueButton>\n           </HeaderRow>\n           {questions && questions.length > 0 && questions.map(question => (\n            <QuestionRow title={question.title}/>\n                       ))}           \n\n                    \n           \n        \n        </main>\n        \n       \n    )\n}\n\n\n\nexport default QuestionsPage"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,OAAO,qBAAqB;AAC5B,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,YAAY;AAElC,SAASC,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,SAAS,GAAGT,MAAM,CAACU,GAAG;AAC5B;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAJIF,SAAS;AAWf,SAASG,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAACC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC7C,SAASkB,cAAcA,CAAA,EAAG;IACtBC,KAAK,CAACC,GAAG,CAAC,iCAAiC,EAAE;MAACC,eAAe,EAAC;IAAI,CAAC,CAAC,CACnEC,IAAI,CAACC,QAAQ,IAAIN,YAAY,CAACM,QAAQ,CAACC,IAAI,CAAC,CAAC;EAClD;EACAvB,SAAS,CAAC,MAAMiB,cAAc,CAAC,CAAC,EAAE,EAAE,CAAC;EACrC,oBACIR,OAAA;IAAAe,QAAA,gBACIf,OAAA,CAACN,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXnB,OAAA,CAACC,SAAS;MAAAc,QAAA,gBACTf,OAAA,CAACL,YAAY;QAAAoB,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC,eACtCnB,OAAA,CAACJ,UAAU;QAAAmB,QAAA,eACPf,OAAA,CAACF,OAAO;UAACsB,EAAE,EAAC,MAAM;UAAAL,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,EACXb,SAAS,IAAIA,SAAS,CAACe,MAAM,GAAG,CAAC,IAAIf,SAAS,CAACgB,GAAG,CAACC,QAAQ,iBAC3DvB,OAAA,CAACP,WAAW;MAAC+B,KAAK,EAAED,QAAQ,CAACC;IAAM;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKX,CAAC;AAIf;AAACd,EAAA,CA3BQD,aAAa;AAAAqB,GAAA,GAAbrB,aAAa;AA+BtB,eAAeA,aAAa;AAAA,IAAAD,EAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}